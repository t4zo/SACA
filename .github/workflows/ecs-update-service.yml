name: Amazon ECS - Update Service

on:
  # workflow_run:
  #   workflows: 
  #     - build
  #   branches: 
  #     - main
  #   types:
  #     - completed

  push:
    branches: 
      - main

  pull_request:
    branches: 
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: Development

    env:
      DOCKERHUB_USER_IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB__IMAGE_TAG }}
      GITHUB_USER_IMAGE_TAG: ${{ github.repository_owner }}/${{ secrets.DOCKERHUB__IMAGE_TAG }}

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: docker build -f src/Dockerfile -t ${{ env.GITHUB_USER_IMAGE_TAG }} ./src

      - name: Login DockerHub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u ${{ github.repository_owner }} --password-stdin

      - name: Push
        run: docker push ${{ env.GITHUB_USER_IMAGE_TAG }}      

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update ECS Cluster Service
        id: deploy
        run: |
          aws ecs update-service --cluster ${{ secrets.AWS_ECS_CLUSTER }} --service ${{ secrets.AWS_ECS_SERVICE }} --force-new-deployment
